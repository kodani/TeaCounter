%!PS-Adobe-3.0
%%Creator: (ImageMagick)
%%Title: (fire)
%%CreationDate: (2017-03-17T11:52:16+05:00)
%%BoundingBox: 616 620 851 625
%%HiResBoundingBox: 616 620 851 625
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
  showpage
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 616 620 851 625
DisplayImage
616 620
235 5
12
235 5
1
1
1
8
FFD3B9FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE46B39
479EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBE62F8FFFFFFFFFFFFFFB84B
FFFFFFFFFFFFFFFFFFFFFFFFC337C0E9E9F6FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCE75FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF346B5FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9F56FCFFFFFFFFFFFFFFFFFFFFFF
FFFFFF9E4CFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB528BE3C643CEFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB84BFFFFFFFFFFFFFFFFFFFFFFFF9E62FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFA675FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9E
54FEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFF743B8FFFFFFFFFFFFFFFFFFFFFFFFFFFFAB5AFFFFFFFFFFFFFFFFFFFFFFFF
FFFF333352FFFFFFFF649F78544BBBFFFFFFD1613D459BFDFFFFFFFFFFFFFFFFFFFFBC52
FEFFFFFFFFFFFFFFFF4F65FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDB5B3B62
9F4BFFFFFFB1533A50BFFFFFBF333333333333EFFFFFFFFFFFFFFFFFFFFFD4633D488EFB
FFFFED7843467DF1FFFF9B65FFFFFF58A8FFFD33BC654F59DCFFFF6F333333337FFFFF5B
934D74A74C7FFFFFEB73433D7BF3FFFFFFFF4BAAFFFFFFFFFD33BC654F59DCFFFFEF7641
3F71ECFFFF5B934D74A74C7FFFFFEB73433D7BF3FFFFFFFFFF9064FFFFFFFFFFFF4F65FF
FFFFFFFFFFB767FFFFFFFFFFFFFFFFFFFFFFFFFFFFF8AB52FFFFFFFF6845DAFFAC3FFBFF
EE3FA9FBDF4FA7FFFFFFFFFFFFFFFFFFFF8B7E803C4DAAFFFFFFFFFF4F65FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5487F8DA4D4BFFFFC73FCEFCC538D9FFFDF8936AF8
F8F8FFFFFFFFFFFFFFFFFFFFEF409CEFDD5193FFFF6473F1EF686AFFFF9B65FFFFFF58A8
FFFF3561F0FE7A6EFFFFFB8C73F8F8FBFFFF5F72F5378EE733EFFF617FF3EF7273FFFFFF
E333E0FFFFFFFFFF3561F0FE7A6EFFFF7F63F0EF6781FFFF5F72F5378EE733EFFF617FF3
EF7273FFFFFFFFFFC837F7FFFFFFFFFF4F65FFFFFFFFFFFFD7A4FFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFAF52FFFFFFFF687FFFFFE933E3FFA855FFFFFFA959FFFFFFFFFFFFFFFFFFFF
733BABF3BD37C8FFFFFFFFE1E4FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDF33E6
FFFF954BFFFF7588FFFFFF768CFFFFFF956BFFFFFFFFFFFFFFFFFFFFFFFFFFA84DFFFFFF
D7C5FFDE33E4FFFFD033ECFF9B65FFFFFF58A8FFFF35B3FFFFB64AFFFFFF8F75FFFFFFFF
FF5FA4FF48BAFF35DCDB33EEFFFFDC34F1FFFFC239FFFFFFFFFFFF35B3FFFFB64AFFFFF4
F3FFFFA758FFFF5FA4FF48BAFF35DCDB33EEFFFFDC34F1FFFFFFFFEF33D8FFFFFFFFFFE1
E4FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
%%PageTrailer
%%Trailer
%%EOF
